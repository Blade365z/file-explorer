{"version":3,"sources":["components/FavouriteList.js","components/IcloudList.js","components/helper.js","components/PathBox.js","components/Nav.js","components/Explorer.js","components/NewFolder.js","components/WindowButtons.js","components/App.js","index.js"],"names":["FavouriteList","props","useState","currentlySelected","setcurrentlySelected","useEffect","defaultSelected","className","style","fontWeight","color","name","key","icon","map","favourite","display","onClick","selected","onSelect","marginRight","replace","IcloudList","element","initalizeDirectoryStructure","Tree","directoryTree","localStorage","getItem","JSON","parse","home","6710","child","6722","6711","177773","177774","17772","18882","1888234","188299391","188299392","1888235","18883","15447586","5256355","5251","1213233","8966525","78455124","121212121","3211221","setItem","stringify","updateDirectoryTree","updatedTree","PathBox","path","setPath","pathSliced","currentPath","length","slice","Math","round","dir","Nav","searchBarShow","setsearchBarShow","handleNavigationClick","type","onGoBack","onGoForward","fontSize","navigationButtonsEnabled","back","title","forward","marginLeft","id","placeholder","onChange","e","handleSearch","target","value","trim","changeView","gridMode","openModal","Explorer","outerRef","useRef","DirList","setDirList","MenuX","setMenuX","MenuY","setMenuY","showMenu","setShowMenu","showRenameMenu","setShowRenameMenu","rightClickedFor","setRightClickedFor","newName","setNewName","directories","document","addEventListener","handleClick","removeEventListener","current","contains","count","Object","entries","searchKeyword","toLowerCase","includes","selectedDirecrtory","draggable","handleSelectDirectory","onDoubleClick","folder","exploreFolder","onDragStart","dragStartHandler","onDragOver","dragOverHandler","onDrop","dragOnHandler","onDragEnd","dragEndHandler","onDragLeave","dragLeaveHandle","onContextMenu","preventDefault","pageX","pageY","openContextMenu","marginTop","DraggedOverIcon","textAlign","top","left","position","backgroundColor","deleteDirectory","ref","padding","onSubmit","renameDirectory","submitRenameForm","margin","input","NewFolder","DirName","setDirName","createFolder","handleSubmit","cancelCreate","handleCancelBtn","marginBottom","width","required","WindowButtons","App","Array","DirectoryStack","setDirectoryStack","CurrentDirectoryList","setCurrentDirectoryList","Path","DirectoryPointerOffset","setDirectoryPointerOffset","DirectoryPointerRow","setDirectoryPointerRow","selectedSideBarTab","setselectedSideBarTab","setselectedDirecrtory","grabbed","DraggedDirs","setDraggedDirs","SearchKeyword","setSearchKeyword","CreateNewFolder","setCreateNewFolder","GridMode","setGridMode","setnavigationButtonsEnabled","temp","traceDirectories","getDirectoryNames","row","dirStackTemp","push","offset","traceArr","i","processDirectoryTree","baseDir","targetDir","insertFlag","filterDuplicatesFLag","renameFlag","deleteOnlyFlag","iter","directoryTreeArr","keys","forEach","k","floor","Date","now","tempTrack","DirNames","handleOpenNewFolderModal","newObj","keyword","dataTransfer","setData","dirGrabbed","getData","grabbedDirectories","pop","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c0f3a1e4.chunk.js","sourcesContent":["import React,{useEffect, useState} from 'react'\n\nconst FavouriteList = (props) => {\n    const [currentlySelected, setcurrentlySelected] = useState(null);\n    useEffect(()=>{\n       setcurrentlySelected(props.defaultSelected);\n    },[props.defaultSelected])\n    const handleSideBarClick = (selected) => {\n            props.onSelect(selected);\n    }\n    const favourites  = [\n        {\n            name:'Air_Drop',\n            key:'6710',\n            icon: 'cloud download icon'                     \n        },\n        {\n            name:'Recents',\n            key:'6722',\n            icon: 'clock outline icon'\n        },\n        {\n            name:'Applications',\n            key:'6711',\n            icon: 'desktop icon'\n        },\n        {\n            name:'Downloads',\n            key:'177232322',\n            icon: 'download icon'\n        },\n        {\n            name:'Amitabh',\n             key:'17772',\n            icon: 'home icon'\n        },\n        {\n            name:'Music',\n            key:'18882',\n            icon: 'music icon'\n        },\n        {\n            name:'Movies',\n            key:'18883',\n            icon: 'video icon'\n        },{\n            name:'Creative_Cloud_Files',\n            key:'177732',\n            icon: 'folder  icon'\n        },\n\n]\n    return (\n        <div>\n         \n            <ul className=\"list\">\n            <div style={{fontWeight:'bold',color:'#adadad'}}>Favourites</div>\n            {\n                favourites.map(favourite=>{\n                    return <li   key={favourite.name} className={favourite.key===currentlySelected? 'list-items active' : 'list-items'}>\n                        <div style={{display:'flex'}} onClick={()=>{handleSideBarClick(favourite.key)}}>\n                                <i className={favourite.icon} style={{marginRight:'10px', color:'rgb(0, 162, 255)'}}></i>\n                                <span className=\"content\" style={{color:'white'}}>\n                              {favourite.name.replace('_',' ')}\n                                </span>\n                             </div>\n                    </li>\n                })\n            }\n            </ul>\n        </div>\n    )\n}\n\nexport default FavouriteList;","import React from 'react'\n//I-Cloud icons\nconst IcloudList = () => {\n    const icloudList  = [\n        {\n            name:'iCloud Drive',\n            icon: 'cloud download icon'\n        },\n        {\n            name:'Documents',\n            icon: 'clock outline icon'\n        },\n        {\n            name:'Desktop',\n            icon: 'desktop icon'\n        }\n             \n\n]\n    return (\n        <div>\n         \n            <ul className=\"list\">\n            <div style={{fontWeight:'bold',color:'#adadad'}}>iCloud</div>\n            {\n                icloudList.map(element=>{\n                    return <li  key={element.name} className='list-items'>\n                        <div style={{display:'flex'}}>\n                                <i className={element.icon} style={{marginRight:'10px', color:'rgb(0, 212, 255)'}}></i>\n                                <span className=\"content\" style={{color:'white'}}>\n                              {element.name}\n                                </span>\n                             </div>\n                    </li>\n                })\n            }\n            </ul>\n        </div>\n    )\n}\n\nexport default IcloudList;","//Directory Tree Initiator\n\n\nexport const initalizeDirectoryStructure = (Tree = null) => {\n    var directoryTree = {}\n    //Check if exists in LS\n    if (!localStorage.getItem('directoryTree')) {\n        if (Tree) {\n            directoryTree = Tree\n        } else {\n            directoryTree = {\n                home: {\n                    6710: {\n                        name: 'Air_Drop',\n                        child: {\n\n                        }\n                    },\n                    6722: {\n                        name: 'Recents',\n                        child: {\n\n                        }\n                    },\n\n                    6711: {\n                        name: 'Applications',\n                        child: {\n                            177773: {\n                                name: 'Lightroom',\n                                child: {\n\n                                }\n                            },\n                            177774: {\n                                name: 'Photoshop',\n                                child: {\n\n                                }\n                            }\n                        }\n                    },\n\n                    17772: {\n                        name: 'Amitabh',\n                        child: {\n                            177773: {\n                                name: 'Documents',\n                                child: {\n\n                                }\n                            },\n                            177774: {\n                                name: 'Downloads',\n                                child: {\n\n                                }\n                            }\n                        }\n                    },\n                    18882: {\n                        name: 'Music',\n                        child: {\n                            1888234: {\n                                name: 'Pink_Floyd',\n                                child: {\n                                    188299391: {\n                                        name: 'First_Album',\n                                        child: {\n\n                                        }\n                                    },\n                                    188299392: {\n                                        name: 'Second_Album',\n                                        child: {\n\n                                        }\n                                    }\n                                }\n                            },\n                            1888235: {\n                                name: 'Megadeth',\n                                child: {\n                                    188299391: {\n                                        name: 'First_Album',\n                                        child: {\n\n                                        }\n                                    },\n                                    188299392: {\n                                        name: 'Second_Album',\n                                        child: {\n\n                                        }\n                                    }\n                                }\n                            },\n                        }\n                    },\n                    18883: {\n                        name: 'Movies',\n                        child: {\n                            15447586: {\n                                name: 'Adventure',\n                                child: {\n                                    5256355: {\n                                        name: 'Fast & Furious',\n                                        child: {\n                                            5251: {\n                                                name: 'FF7',\n                                                child: {\n\n                                                },\n                                            },\n                                            1213233: {\n                                                name: 'Tokyo Drift',\n                                                child: {\n\n                                                }\n                                            },\n                                        }\n                                    },\n                                    8966525: {\n                                        name: 'Jumanji',\n                                        child: {\n\n                                        }\n                                    }\n                                }\n                            },\n                            78455124: {\n                                name: 'Comedy',\n                                child: {\n                                    121212121: {\n                                        name: 'Rush_hour',\n                                        child: {\n\n                                        }\n                                    },\n                                    3211221: {\n                                        name: 'The Dictator',\n                                        child: {\n\n                                        }\n                                    }\n                                }\n                            },\n                        }\n                    }\n                }\n            }\n        }\n        localStorage.setItem('directoryTree', JSON.stringify(directoryTree));\n    } else {\n        directoryTree = JSON.parse(localStorage.getItem('directoryTree'))\n    }\n    return directoryTree;\n}\n\n //Update Tree on Procss\nexport const updateDirectoryTree = (updatedTree) => {\n    if (localStorage.getItem('directoryTree')) {\n        localStorage.setItem('directoryTree', JSON.stringify(updatedTree));\n    } else {\n        initalizeDirectoryStructure(updatedTree);\n    }\n}","import React, { useState, useEffect } from 'react'\n\n//Path Boxs UI\nconst PathBox = (props) => {\n    const [path, setPath] = useState([]);\n    useEffect(() => {\n        let pathSliced = props.currentPath;\n        //Crop if path > 6 to not overload box\n        if (pathSliced.length > 6) {\n            pathSliced = pathSliced.slice(pathSliced.length - Math.round(pathSliced.length / 3), pathSliced.length)\n            setPath(pathSliced);\n        } else {\n            setPath(pathSliced);\n        }\n    }, [props.currentPath])\n\n    return (\n        <div style={{ display: 'inline-block' }}>\n            { path.length < 4 && <div key={'Home'} className=\"path-tag\" ><i className=\"home icon\"> </i>Home</div>}\n            {path.map(dir => {\n                return <div key={dir} className=\"path-tag\">{dir}</div>\n            })}\n\n        </div>\n    )\n}\n\nexport default PathBox;","import React,{useState,useEffect} from 'react'\nimport PathBox from './PathBox';\n\nexport const Nav = (props) => {\n    const [searchBarShow, setsearchBarShow] = useState(false)\n    useEffect(() => {\n        setsearchBarShow(false)\n    },[props.currentPath])\n    const handleNavigationClick = (type) => {\n        switch (type) {\n            case 'back':\n                props.onGoBack();\n                break;\n            case 'forward':\n                props.onGoForward();\n                break;\n            default:\n                return null;\n                break;\n        }\n    }\n    return (\n        <div className=\"ui menu\">\n            <div className=\"item\">\n                <div style={{ display: 'flex', fontSize: '2em' }}>\n                    <div className={props.navigationButtonsEnabled.back ? \"ui nav-icon\" : \"ui nav-icon disabled\"} title=\"Go Back\" onClick={() => { handleNavigationClick('back') }}><i className=\"angle left icon \"></i></div>\n                    <div className={props.navigationButtonsEnabled.forward ? \"ui nav-icon\" : \"ui nav-icon disabled\"}   title=\"Go Forward\" onClick={() => { handleNavigationClick('forward') }}><i className=\"angle right icon \"></i></div>\n\n                </div>\n            </div>\n            <div className=\"item\">\n                <PathBox currentPath={props.currentPath} />\n            </div>\n            <div className=\"item\" style={{ marginLeft: 'auto' }}>\n               {searchBarShow && <div className=\"ui  input\" id=\"nav-search\">\n                    <input type=\"text\" placeholder=\"Search Directories\" onChange={(e)=>props.handleSearch(e.target.value.trim())} />\n                </div>}\n                <div className=\"searchBtn-nav nav-tool-icon\"  onClick={()=>setsearchBarShow(!searchBarShow)}>\n                    <i className=\"search icon\"></i>\n                </div>\n                <div className=\"ui nav-tool-icon \" onClick={() => { props.changeView() }}>\n                    {props.gridMode === true ? <i className=\"list icon\" title=\"List view\"></i> : <i className=\"th icon\" title=\"Grid view\"></i>}\n                </div>\n                <div className=\"ui nav-tool-icon \" onClick={() => { props.openModal() }}>\n                     <i className=\"folder icon\" title=\"Create new folder\" ></i> \n                </div>\n            </div>\n\n        </div>\n    )\n}\n","import React, { useEffect, useRef, useState } from 'react'\n\n\nconst Explorer = (props) => {\n\n    const outerRef = useRef(null);\n\n    const [DirList, setDirList] = useState([])\n    const handleFolderClick = (folder) => {\n        props.exploreFolder(folder)\n    }\n    const [MenuX, setMenuX] = useState('0px');\n    const [MenuY, setMenuY] = useState('0px');\n    const [showMenu, setShowMenu] = useState(false);\n    const [showRenameMenu, setShowRenameMenu] = useState(false)\n    const [rightClickedFor, setRightClickedFor] = useState({\n        name: null,\n        key: null\n    });\n\n    const [newName, setNewName] = useState(null)\n\n    const openContextMenu = (e, key, name) => {\n        e.preventDefault();\n        setMenuX(e.pageX)\n        setMenuY(e.pageY)\n        setShowMenu(true);\n        setRightClickedFor({\n            name: name,\n            key: key\n        });\n    }\n    useEffect(() => {\n        setDirList(props.directories);\n\n    }, [props.directories])\n    useEffect(() => {\n        document.addEventListener('click', function () {\n            setShowMenu(false);\n        });\n    })\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleClick);\n        return () => document.removeEventListener(\"mousedown\", handleClick);\n        function handleClick(e) {\n            if (outerRef && outerRef.current) {\n                const ref = outerRef.current\n                if (!ref.contains(e.target)) {\n                    setShowRenameMenu(false);\n                    setNewName(null);\n                }\n            }\n        }\n    }, [])\n    const handleRenameInputChange = (input) => {\n        setRightClickedFor({\n            name: input,\n            key: rightClickedFor.key\n        })\n        setNewName(input)\n    }\n    const submitRenameForm = (e) => {\n        e.preventDefault();\n        setShowRenameMenu(false);\n        setNewName(null);\n        props.renameDirectory(newName, rightClickedFor.key)\n    }\n\n    var count = 0;\n    return (\n        <div className={props.gridMode ? \"explorer\" : \"list-explorer\"}>\n\n            { Object.entries(DirList).length > 0 ? Object.entries(DirList).map((name, value) => {\n                if (props.searchKeyword) {\n                    if (!DirList[name[0]]['name'].toLowerCase().includes(props.searchKeyword.toLowerCase()))\n                        return;\n                }\n                count += 1;\n                return <div key={name[0]}>    <div className={props.selectedDirecrtory === name[0] ? \"folder-large active\" : \"folder-large\"}\n                    draggable\n                    onClick={() => { props.handleSelectDirectory(name[0]) }}\n                    onDoubleClick={() => { handleFolderClick(name[0]) }}\n                    onDragStart={(e) => { props.dragStartHandler(e, name[0]) }}\n                    onDragOver={(e) => { props.dragOverHandler(e, name[0]) }}\n                    onDrop={(e) => { props.dragOnHandler(e, name[0]) }}\n                    onDragEnd={(e) => { props.dragEndHandler(e, name[0]) }}\n                    onDragLeave={(e) => { props.dragLeaveHandle(e, name[0]) }}>\n\n                    <i onContextMenu={(e) => { openContextMenu(e, name[0], DirList[name[0]]['name']) }} style={{ marginTop: '12px' }} className={name[0] === props.DraggedOverIcon ? \"folder open icon\" : \"folder icon\"}></i>\n                    <span className=\"folder-name\">\n                        {DirList[name[0]]['name']}\n                    </span>\n\n                </div>\n\n                </div>\n            }) : <div style={{ textAlign: \"center\" }}><h3>Folder is Empty.</h3></div>\n\n            }\n            {props.searchKeyword && Object.entries(DirList).length > 0 && count===0 && <div style={{ textAlign: \"center\" }}><h3>Not Found.</h3></div>}\n            {showMenu && <div className=\"menu\" style={{ top: MenuY + 5, left: MenuX, position: 'absolute', backgroundColor: '#FFFF', color: 'black' }}>\n                <ul className=\"context-menu\" >\n                    <li className=\"item\" onClick={() => { setShowRenameMenu(true) }}>\n                        Rename...\n                            </li>\n                    <li className=\"item\" onClick={() => { props.deleteDirectory(rightClickedFor.key) }}>\n                        Delete\n                            </li>\n                    <li className=\"item\" onClick={() => { props.openModal() }}>\n                        Create New\n                            </li>\n                </ul>\n            </div>}\n            {   showRenameMenu && <div className=\"menu\" ref={outerRef} style={{ top: MenuY + 15, left: MenuX, position: 'absolute', backgroundColor: '#FFFF', color: 'black' }}>\n                <div style={{ padding: '5px' }}>\n                    <form onSubmit={(e) => submitRenameForm(e)}>\n                        <div><h4 style={{ margin: '0px', marginTop: '5px' }}>Rename</h4></div>\n                        <div className=\"ui action input\">\n                            <input type=\"text\" placeholder=\"\" value={rightClickedFor.name} onChange={(e) => handleRenameInputChange(e.target.value)} />\n                            <button className=\"ui positive button\">Rename</button>\n                        </div>\n                    </form>\n                </div>\n            </div>}\n        </div>\n    )\n}\n\nexport default Explorer;\n","import React, { useState } from 'react'\n\nconst NewFolder = (props) => {\n    const [DirName, setDirName] = useState(null)\n    const handleCancelBtn = (e) => {\n        e.preventDefault();\n        props.cancelCreate()\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.createFolder(DirName);\n    }\n    return (\n        <div className={props.openModal === true ? \"modal modal-show\" : \"modal modal-hide\"}>\n            <div className=\"modal-content\">\n                <form onSubmit={(e)=>{handleSubmit(e)}}>\n                    <div style={{ display: 'flex', backgroundColor: '#424146', padding: '10px' }}>\n                        <div style={{ marginRight: 'auto' }}><button onClick={(e) => {handleCancelBtn(e)}} className=\"ui small button\">Cancel</button></div>\n                        <div><h4 style={{ margin: '0px', marginTop: '5px' }}>Create New Folder</h4></div>\n                        <div style={{ marginLeft: 'auto' }}><button className=\"ui small button\">Confirm</button></div>\n                    </div>\n                    <div style={{ padding: '10px', backgroundColor: '#fefefe' }}>\n                        <h5 style={{ color: 'black', marginBottom: '2px' }}>Folder name</h5>\n                        <div className=\"ui input\" style={{ width: '80%' }}>\n                            <input type=\"text\" placeholder=\"Search...\" onChange={(e)=>setDirName(e.target.value.trim())}  required/>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\nexport default NewFolder;\n","import React from 'react'\n\nexport const WindowButtons = () => {\n    return (\n        <div className=\"ui menu\">\n                <div className=\"window-icon\" style={{color:\"rgb(226, 60, 38)\"}}><i className=\"circle icon\">    </i></div>\n                <div className=\"window-icon\" style={{color:\"rgb(255, 189, 7)\"}}><i className=\"circle icon\">    </i></div>\n                <div className=\"window-icon\" style={{color:\"rgb(0, 180, 9)\"}}><i className=\"circle icon\">    </i></div>\n        </div>\n    )\n}\n","import React, { useEffect, useState, useRef } from 'react'\nimport FavouriteList from './FavouriteList'\n\nimport './App.css';\nimport IcloudList from './IcloudList';\nimport { initalizeDirectoryStructure, updateDirectoryTree } from './helper';\nimport { Nav } from './Nav';\nimport Explorer from './Explorer';\nimport NewFolder from './NewFolder';\nimport { WindowButtons } from './WindowButtons';\nvar directoryTree = initalizeDirectoryStructure();\n\nconst App = () => {\n    //Keep Track of the directory\n    const [DirectoryStack, setDirectoryStack] = useState(Array(['17772']));\n    const [CurrentDirectoryList, setCurrentDirectoryList] = useState([]);\n    const [Path, setPath] = useState([])\n    const [DirectoryPointerOffset, setDirectoryPointerOffset] = useState(0);\n    const [DirectoryPointerRow, setDirectoryPointerRow] = useState(0);\n\n\n    const [selectedSideBarTab, setselectedSideBarTab] = useState('17772')\n    const [selectedDirecrtory, setselectedDirecrtory] = useState(null)\n    const [DraggedDirs, setDraggedDirs] = useState({\n        grabbed: null,\n        target: null\n    });\n    const [SearchKeyword, setSearchKeyword] = useState('')\n\n    const [CreateNewFolder, setCreateNewFolder] = useState(false);\n    const [GridMode, setGridMode] = useState(true);\n\n\n    const [navigationButtonsEnabled, setnavigationButtonsEnabled] = useState({\n        back: false,\n        forward: false,\n    })\n\n\n    useEffect(() => {\n        let temp = traceDirectories(DirectoryStack[0]);\n        setCurrentDirectoryList(temp);\n        document.addEventListener('contextmenu', function (e) {\n            e.preventDefault();\n        })\n    }, []);\n\n    useEffect(() => {\n        getDirectoryNames(DirectoryStack[DirectoryPointerRow])\n        setSearchKeyword('')\n    }, [CurrentDirectoryList])\n\n    //On Icon Select \n    const selectDirectory = (key) => {\n        setselectedDirecrtory(key);\n    }\n\n    //on SideBar Select\n    const sideBarSelect = (key) => {\n        setselectedSideBarTab(key); //Selected SideBarTab\n        exploreFolder(key)\n    }\n\n\n    //Explore directory using key\n    const exploreFolder = (dir) => {\n        setnavigationButtonsEnabled({\n            back: true,\n            forward: navigationButtonsEnabled.forward\n        });\n        if (directoryTree['home'][dir]) {\n            //Means it is a home directory\n            //Append the DirectoryStack\n            let row = DirectoryPointerRow;\n            let dirStackTemp = DirectoryStack;\n            if (row !== dirStackTemp.length - 1) {\n                row = dirStackTemp.length - 1;\n                setDirectoryPointerRow(row);\n                setDirectoryPointerOffset(0);\n            }\n            if (DirectoryStack[row][0] === dir) {\n                dirStackTemp[row] = [dir];\n                setDirectoryStack(dirStackTemp);\n            } else {\n                row += 1;\n                setDirectoryPointerOffset(0);\n                setDirectoryPointerRow(row);\n                dirStackTemp.push([dir]);\n                setDirectoryStack(dirStackTemp);\n            }\n            //Trace Directory Items\n            let temp = traceDirectories(dirStackTemp[row]);\n            setCurrentDirectoryList(temp)\n        } else {\n            let offset = DirectoryPointerOffset;\n            let row = DirectoryPointerRow;\n            let dirStackTemp = DirectoryStack;\n            if (offset !== dirStackTemp[row].length - 1) {\n                dirStackTemp[row] = dirStackTemp[row].slice(0, offset + 1);\n                offset = dirStackTemp[row].length - 1;\n                setDirectoryPointerOffset(offset);\n            }\n            dirStackTemp[row].push(dir);\n            offset += 1;\n            setDirectoryPointerOffset(offset);\n            setDirectoryStack(dirStackTemp);\n\n            //Trace Directory Items\n            let temp = traceDirectories(dirStackTemp[row]);\n            setCurrentDirectoryList(temp)\n        }\n\n    }\n    //Trace Directory Hierarchy\n    const traceDirectories = (traceArr) => {\n        let temp = [];\n        for (let i = 0; i < traceArr.length; i++) {\n            if (i === 0) {\n                temp = directoryTree['home'][traceArr[i]]['child'];\n            } else {\n                if (temp[traceArr[i]])\n                    temp = temp[traceArr[i]]['child'];\n            }\n        }\n        return temp;\n    }\n\n\n    //On Go Back Click\n    const handleGoBack = () => {\n        let row = DirectoryPointerRow;\n        let offset = DirectoryPointerOffset;\n        let dirStackTemp = DirectoryStack.map(e => e);\n        if (offset === 0 && row === 0) {\n            setnavigationButtonsEnabled({\n                back: false,\n                forward: true\n            });\n            //TODO::DISABLE BACK BUTTON\n        } else {\n            setnavigationButtonsEnabled({\n                back: navigationButtonsEnabled.back,\n                forward: true\n            });\n            if (row !== 0 && offset === 0) {\n                row -= 1;\n                setDirectoryPointerRow(row);\n                offset = dirStackTemp[row].length - 1;\n                setDirectoryPointerOffset(offset);\n                let temp = traceDirectories(dirStackTemp[row]);\n                setCurrentDirectoryList(temp)\n            } else {\n                let path = dirStackTemp[row].slice(0, offset);\n                offset = offset - 1;\n                setDirectoryPointerOffset(offset);\n                let temp = traceDirectories(path);\n                setCurrentDirectoryList(temp)\n            }\n        }\n    }\n    //On go Forward Click\n    const handleGoForward = () => {\n        let row = DirectoryPointerRow;\n        let offset = DirectoryPointerOffset;\n        let dirStackTemp = DirectoryStack.map(e => e);\n        if (row === dirStackTemp.length - 1 && offset === dirStackTemp[row].length - 1) {\n            setnavigationButtonsEnabled({\n                back: true,\n                forward: false\n            });\n            //TODO::DISABLE FORWARD BUTTON\n        } else {\n            setnavigationButtonsEnabled({\n                back: true,\n                forward: navigationButtonsEnabled.forward\n            });\n            if (row !== dirStackTemp.length - 1 && offset === dirStackTemp[row].length - 1) {\n                row += 1;\n                setDirectoryPointerRow(row);\n                offset = 0;\n                setDirectoryPointerOffset(offset);\n                let path = dirStackTemp[row].slice(0, offset + 1)\n                let temp = traceDirectories(path);\n                setCurrentDirectoryList(temp)\n            } else {\n                offset = offset + 1;\n                let path = dirStackTemp[row].slice(0, offset + 1);\n                setDirectoryPointerOffset(offset);\n                let temp = traceDirectories(path);\n                setCurrentDirectoryList(temp)\n            }\n        }\n    }\n\n    //Draggable Logic \n    const dragStartHandler = (e, dir) => {\n        setDraggedDirs({\n            grabbed: dir,\n            target: null\n        })\n        e.dataTransfer.setData(\"dir\", dir);\n    }\n\n    const dragOverHandler = (e, dir) => {\n        e.preventDefault();\n        if (DraggedDirs.grabbed !== dir) {\n            setDraggedDirs({\n                grabbed: DraggedDirs.grabbed,\n                target: dir\n            });\n        }\n    }\n    const dragOnHandler = (e, dir) => {\n        let dirGrabbed = e.dataTransfer.getData(\"dir\");\n        if (dirGrabbed !== dir) {\n            //Logic comes here\n            let row = DirectoryPointerRow;\n            let offset = DirectoryPointerOffset;\n            let dirStackTemp = DirectoryStack.map(e => e);\n            let path = dirStackTemp[row].slice(0, offset + 1);\n            // path.push(dirGrabbed);\n            var grabbedDirectories = traceDirectories(path)\n            path.pop();\n            processDirectoryTree(dirGrabbed, grabbedDirectories[dirGrabbed], dir, true, true);\n        }\n    }\n\n\n    //Main heart of proccessing directories \n    //INSERT,DELETE,RENAME,MOVE\n    const processDirectoryTree = (dir = null, baseDir, targetDir, insertFlag = false, filterDuplicatesFLag = false, renameFlag = false, deleteOnlyFlag) => {\n        // directly mutate in directoryTree and set DirectoryStack\n        if (insertFlag && !dir) {\n            dir = Math.floor(Date.now() / 1000); // Assigning key to new folder\n        }\n        //traversing the directory tree.,\n        function iter(directoryTreeArr) {\n            Object.keys(directoryTreeArr).forEach(function (k) {\n                //move the directory to target context\n                if (k === targetDir) {\n                    if (insertFlag) {\n                        directoryTreeArr[k]['child'][dir] = baseDir;\n                        return;\n                    } else if (renameFlag) {\n                        directoryTreeArr[k]['name'] = dir;\n                        return;\n                    } else if (deleteOnlyFlag) {\n                        delete directoryTreeArr[k];\n                    }\n                }\n                //remove original\n                if (k === dir && filterDuplicatesFLag === true) {\n                    delete directoryTreeArr[k];\n                }\n                if (directoryTreeArr[k] !== null && typeof directoryTreeArr[k] === 'object') {\n                    //reccursively traversing the directory Tree (Nested Object)\n                    iter(directoryTreeArr[k]);\n                    return;\n                }\n            });\n            return directoryTreeArr;\n        }\n        directoryTree = iter(directoryTree)\n        updateDirectoryTree(directoryTree)\n    }\n    const dragEndHandler = (e, dir) => {\n        setDraggedDirs({\n            grabbed: null,\n            target: null\n        })\n    }\n\n    const dragLeaveHandle = () => {\n        setDraggedDirs({\n            grabbed: DraggedDirs.grabbed,\n            target: null\n        })\n    }\n\n\n\n    //Grab all underlying directories based on a path, path = array elements    \n    const getDirectoryNames = (traceArr) => {\n        let tempTrack = [];\n        let DirNames = [];\n        for (let i = 0; i < traceArr.length; i++) {\n            if (i === 0) {\n                tempTrack = directoryTree['home'][traceArr[i]]['child'];\n                DirNames.push(directoryTree['home'][traceArr[i]]['name'])\n            } else {\n                if (tempTrack[traceArr[i]]) {\n                    let dir = tempTrack[traceArr[i]]['name']\n                    tempTrack = tempTrack[traceArr[i]]['child']\n                    DirNames.push(dir)\n                }\n            }\n        }\n        DirNames = DirNames.slice(0, DirectoryPointerOffset + 1); // To filter directory path  only upto current Offset\n        setPath(DirNames);\n        return DirNames;\n    }\n\n\n\n    //Create New Folder\n    const handleOpenNewFolderModal = () => {\n        setCreateNewFolder(true);\n    }\n    const handleCloseNewFolderModal = () => {\n        setCreateNewFolder(false);\n    }\n    const createNewFolder = (name) => {\n        setCreateNewFolder(false);\n        let newObj = {\n            name: name,\n            child: {}\n        }\n        let target = DirectoryStack[DirectoryPointerRow][DirectoryPointerOffset]\n        processDirectoryTree(null, newObj, target, true, false);\n    }\n\n\n    //Rename directory Logic\n    const renameDirectory = (newName, target) => {\n        processDirectoryTree(newName, null, target, false, false, true);\n    }\n\n    //Delete directory Logic\n    const deleteDirectory = (target) => {\n        processDirectoryTree(null, null, target, false, false, false, true);\n    }\n    //To change View\n    const changeView = () => {\n        setGridMode(!GridMode)\n    }\n\n    const handleSearch = (keyword) => {\n        setSearchKeyword(keyword)\n    }\n\n\n    return (\n        <div  >\n            <NewFolder\n                openModal={CreateNewFolder}\n                cancelCreate={handleCloseNewFolderModal}\n                createFolder={createNewFolder}\n\n            />\n            <div className=\"wrapper\">\n                <div className=\"sidebar\">\n                    <WindowButtons />\n                    <FavouriteList defaultSelected={selectedSideBarTab} onSelect={sideBarSelect} />\n                    <IcloudList />\n                </div>\n                <div className=\"pusher\" style={{ width: '100%' }}>\n                    <Nav\n                    navigationButtonsEnabled={navigationButtonsEnabled}\n                        onGoBack={handleGoBack}\n                        onGoForward={handleGoForward}\n                        currentPath={Path}\n                        gridMode={GridMode}\n                        changeView={changeView}\n                        openModal={handleOpenNewFolderModal}\n                        handleSearch={handleSearch}\n                    />\n                    <Explorer\n                        selectedDirecrtory={selectedDirecrtory}\n                        handleSelectDirectory={selectDirectory}\n                        DraggedOverIcon={DraggedDirs.target}\n                        directories={CurrentDirectoryList}\n                        exploreFolder={exploreFolder}\n                        dragStartHandler={dragStartHandler}\n                        dragOverHandler={dragOverHandler}\n                        dragOnHandler={dragOnHandler}\n                        dragEndHandler={dragEndHandler}\n                        dragLeaveHandle={dragLeaveHandle}\n                        openModal={handleOpenNewFolderModal}\n                        renameDirectory={renameDirectory}\n                        deleteDirectory={deleteDirectory}\n                        gridMode={GridMode}\n                        searchKeyword={SearchKeyword}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App';\n\nReactDOM.render(<App></App>,document.getElementById('root'));"],"sourceRoot":""}